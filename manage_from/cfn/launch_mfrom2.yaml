AWSTemplateFormatVersion: "2010-09-09"
Description: Launch Manage from instance
Parameters:
  KeyPairParam:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select KeyPair
    Default: kyndryl_rd_tok
  VPCParam:
    Type: AWS::EC2::VPC::Id
    Description: Select VPC
  SubnetParam:
    Type: AWS::EC2::Subnet::Id
    Description: Select Subnet
  SgParam:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Select Security Group
    Default: sg-06154bd141ef09e70
Mappings:
  amzlin2:
    'ap-northeast-1':
      amiId: ami-02d36247c5bc58c23
Resources:
  MfromRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-SM-Read'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource:
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
  MfromInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: MfromRole
    Properties:
      InstanceProfileName: !Sub '${AWS::StackName}-InstanceProfile'
      Roles:
        - !Ref MfromRole
  MfromInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ amzlin2, !Ref 'AWS::Region', amiId ]
      InstanceType: t2.micro
      IamInstanceProfile: !Ref MfromInstanceProfile
      KeyName: !Ref KeyPairParam
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref SgParam
          SubnetId: !Ref SubnetParam
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ep1'
        - Key: Owner
          Value: Rajasekhar.durvasula
        - Key: Project
          Value: MSP
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum -y update
          yum -y install git
          if [ -f /usr/bin/python3 ]; then
            echo "alias python=/usr/bin/python3" >> /etc/bashrc
          else
            yum -y install python3 python3-devel
            echo "alias python=/usr/bin/python3" >> /etc/bashrc
          fi
          /usr/bin/python3 -m pip install --upgrade --user pip requests paramiko boto3
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          echo "PATH=\$PATH:/usr/local/bin" >> /etc/bashrc
          echo "export PATH" >> /etc/bashrc
